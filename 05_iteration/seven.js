const myNumbers = [1,2,3,4,5,6,7,8,9,10]
// const newNums = myNumbers.map( (num) => num + 10)
// console.log(newNums);
//niche wale mea scope lgaya {} aur retyurn likha taki value reyturn ho upar wale mea esa nhi hai dono option thik hai
// const newNums = myNumbers.map( (num) => { return num + 10})
// console.log(newNums);

//chaining

// const newNums = myNumbers.map().map()
/*अब इस मैप के अंदर भी वही कहानी है ठीक है अब क्योंकि ये समझ में आया तो मैं क्या करता हूं इसको नई लाइन में इंटर कर देता हूं ये भी नई लाइन में गया और ये भी नई लाइन में गया और क्योंकि थोड़ा सा और समझ में आया था उसको इंडेंट कर लेते हैं हम थोड़ा सा ठीक है इस तरह के वालुज आप काफी देखोगे तो देखिए नवे नंबर्स लिखने हैं इंटर हमारा और ये मी मैप लिखा बट प्रॉब्लम क्या है जो समझना वाली बात है की हमने ठीक है यहां पे भी एक ये इस तरह का बना के लिख दिया ये लीजिए कोई दिक्कत वाली बात ही नहीं थी बट इस मैप के अंदर जो इ नाम आएगा उसकी वैल्यू है क्या समझना वाली बात है उसकी वैल्यू देखिए कभी भी वन नहीं होगी उसकी वैल्यू होगी उसके ऊपर जो भी मेथड लगा हुआ है उसे मेथड से जो भी एक वैल्यू पास हो गया है वो क्योंकि ये जैसे पास हो गया है तो अब आपके पास एक अरे इकट्ठा हो चुका है हमने वो सारे को ऑब्वियस सी बात है यहां पे अभी नहीं दाल दिया है जब भी चेंजिंग होती है तो इसका जो भी रिजल्ट है वो सेकंड चेन में पास हो जाता है तो यहां पे जो भी कुछ बनेगा वो सब सेकंड में पास हो जाएगा यहां पे जो नाम की फर्स्ट वैल्यू होगी क्योंकि आपने मल्टीप्लाई ऑलरेडी कर दिया है 10 से तो यहां पे जो 10 होगा वो 10 ही*/
const newNums = myNumbers
    .map((num) => num * 10)
    .map((num) => num + 1)
    .filter((num) => num >= 40 )
console.log(newNums);
